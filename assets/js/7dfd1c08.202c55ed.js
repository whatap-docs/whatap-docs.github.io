"use strict";(self.webpackChunkwhatap_origin=self.webpackChunkwhatap_origin||[]).push([[64766],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=p(n),m=a,g=f["".concat(l,".").concat(m)]||f[m]||u[m]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},87586:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={id:"telegraf-usage",title:"\uc0ac\uc6a9 \uc608\uc2dc",description:"\uc0ac\uc6a9 \uc608\uc2dc\ub97c \uc548\ub0b4\ud569\ub2c8\ub2e4.",tags:["Telegraf","\uc0ac\uc6a9 \uc608\uc2dc"]},o=void 0,s={unversionedId:"telegraf/telegraf-usage",id:"telegraf/telegraf-usage",title:"\uc0ac\uc6a9 \uc608\uc2dc",description:"\uc0ac\uc6a9 \uc608\uc2dc\ub97c \uc548\ub0b4\ud569\ub2c8\ub2e4.",source:"@site/docs/telegraf/telegraf-usage.mdx",sourceDirName:"telegraf",slug:"/telegraf/telegraf-usage",permalink:"/telegraf/telegraf-usage",draft:!1,editUrl:"undefined/docs/telegraf/telegraf-usage.mdx",tags:[{label:"Telegraf",permalink:"/tags/telegraf"},{label:"\uc0ac\uc6a9 \uc608\uc2dc",permalink:"/tags/\uc0ac\uc6a9-\uc608\uc2dc"}],version:"current",frontMatter:{id:"telegraf-usage",title:"\uc0ac\uc6a9 \uc608\uc2dc",description:"\uc0ac\uc6a9 \uc608\uc2dc\ub97c \uc548\ub0b4\ud569\ub2c8\ub2e4.",tags:["Telegraf","\uc0ac\uc6a9 \uc608\uc2dc"]},sidebar:"pluginSidebar",previous:{title:"\uad00\ub9ac\ud558\uae30",permalink:"/telegraf/manage"},next:{title:"Focus\ub780?",permalink:"/focus/introduction"}},l={},p=[{value:"SNMP",id:"snmp",level:2},{value:"SNMP Trap",id:"snmp-trap",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Telegraf\uc5d0 \uad00\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 influxdata\uc758 ",(0,a.kt)("a",{parentName:"p",href:"https://docs.influxdata.com/telegraf/v1.24/"},"Telegraf documentation"),"\uc744 \ucc38\uc870\ud558\uc138\uc694."),(0,a.kt)("h2",{id:"snmp"},"SNMP"),(0,a.kt)("p",null,"SNMP input plugin\uc744 \uc0ac\uc6a9\ud558\uc5ec SNMP \uc131\ub2a5 \ub370\uc774\ud130\ub97c \uc2e4\uc2dc\uac04\uc73c\ub85c \uc218\uc9d1 \ubc0f \ucc28\ud2b8 \ud45c\uc2dc \uac00\ub2a5\ud569\ub2c8\ub2e4. \uc218\uc9d1\ub41c \ub370\uc774\ud130\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"telegraf_snmp"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"telegraf_interface")," \uce74\ud14c\uace0\ub9ac\ub85c \uac80\uc0c9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-batch",metastring:"title='Linux Shell'",title:"'Linux","Shell'":!0},'cat >/etc/telegraf/telegraf.d/snmp_device.conf <<EOL\n[[inputs.snmp]]\n  ## Agent addresses to retrieve values from.\n  ##   format:  agents = ["<scheme://><hostname>:<port>"]\n  ##   scheme:  optional, either udp, udp4, udp6, tcp, tcp4, tcp6.\n  ##            default is udp\n  ##   port:    optional\n  ##   example: agents = ["udp://127.0.0.1:161"]\n  ##            agents = ["tcp://127.0.0.1:161"]\n  ##            agents = ["udp4://v4only-snmp-agent"]\n\n  agents = ["udp://1.1.1.1:161"]\n\n  ## Timeout for each request.\n  # timeout = "5s"\n\n  ## SNMP version; can be 1, 2, or 3.\n   version = 2\n\n  ## SNMP community string.\n   community = "xxxx@xxxxx"\n\n  ## Agent host tag\n  # agent_host_tag = "agent_host"\n\n  ## Number of retries to attempt.\n  # retries = 3\n\n  ## The GETBULK max-repetitions parameter.\n  # max_repetitions = 10\n\n  ## SNMPv3 authentication and encryption options.\n  ##\n  ## Security Name.\n  # sec_name = "myuser"\n  ## Authentication protocol; one of "MD5", "SHA", "SHA224", "SHA256", "SHA384", "SHA512" or "".\n  # auth_protocol = "MD5"\n  ## Authentication password.\n  # auth_password = "pass"\n  ## Security Level; one of "noAuthNoPriv", "authNoPriv", or "authPriv".\n  # sec_level = "authNoPriv"\n  ## Context Name.\n  # context_name = ""\n  ## Privacy protocol used for encrypted messages; one of "DES", "AES", "AES192", "AES192C", "AES256", "AES256C", or "".\n  ### Protocols "AES192", "AES192", "AES256", and "AES256C" require the underlying net-snmp tools\n  ### to be compiled with --enable-blumenthal-aes (http://www.net-snmp.org/docs/INSTALL.html)\n  # priv_protocol = ""\n  ## Privacy password used for encrypted messages.\n  # priv_password = ""\n\n  ## Add fields and tables defining the variables you wish to collect.  This\n  ## example collects the system uptime and interface variables.  Reference the\n  ## full plugin documentation for configuration details.\n  [[inputs.snmp.field]]\n    oid = "RFC1213-MIB::sysUpTime.0"\n    name = "uptime"\n\n  [[inputs.snmp.field]]\n    oid = "RFC1213-MIB::sysName.0"\n    name = "source"\n    is_tag = true\n\n  [[inputs.snmp.table]]\n    oid = "IF-MIB::ifXTable"\n    name = "interface"\n    inherit_tags = ["source"]\n\n  [[inputs.snmp.table.field]]\n    oid = "IF-MIB::ifDescr"\n    name = "ifDescr"\n    is_tag = true\n\n  [[aggregators.derivative]]\n    period = "60s"\n    max_roll_over = 1\n\n    fieldpass = ["*Octets", "*Pkts"]\n    drop_original = false\n\n  [aggregators.derivative.tags]\n    aggr = "derivative"\n\n[[processors.starlark]]\n  source = \'\'\'\ndef apply(metric):\n    for (k, v) in metric.fields.items():\n        if k.endswith(\'Octets_rate\'):\n            metric.fields[k] *= 8\n\n    return metric\n\n\'\'\'\n\nEOL\nservice telegraf restart\n')),(0,a.kt)("h2",{id:"snmp-trap"},"SNMP Trap"),(0,a.kt)("p",null,"SNMP Trap input plugin\uc744 \uc0ac\uc6a9\ud558\uc5ec SNMP Trap \uc774\ubca4\ud2b8\ub97c \uc2e4\uc2dc\uac04\uc73c\ub85c \uc218\uc9d1 \ubc0f \uc774\uba54\uc77c, \ubb38\uc790 \uba54\uc2dc\uc9c0 \ubc0f \uba54\uc2e0\uc800\ub85c \uc804\ud30c \uac00\ub2a5\ud569\ub2c8\ub2e4. \uc218\uc9d1\ub41c \ub370\uc774\ud130\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"telegraf_snmp_trap")," \uce74\ud14c\uace0\ub9ac\ub85c \uac80\uc0c9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-batch",metastring:"title='Linux Shell'",title:"'Linux","Shell'":!0},'cat >/etc/telegraf/telegraf.d/snmp_trap.conf <<EOL\n[[inputs.snmp_trap]]\n  service_address = "udp://:162"\nEOL\nservice telegraf restart\n')))}u.isMDXComponent=!0}}]);