"use strict";(self.webpackChunkwhatap_origin=self.webpackChunkwhatap_origin||[]).push([[97845],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),g=a,m=u["".concat(c,".").concat(g)]||u[g]||d[g]||l;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},33618:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const l={id:"agent-dbsql",title:"DB, SQL \ucd94\uc801",description:"Golang \uc5d0\uc774\uc804\ud2b8\uc758 DB, SQL \uad00\ub828 \uc635\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.",tags:["Golang","DB","SQL"]},o=void 0,i={unversionedId:"golang/agent-dbsql",id:"golang/agent-dbsql",title:"DB, SQL \ucd94\uc801",description:"Golang \uc5d0\uc774\uc804\ud2b8\uc758 DB, SQL \uad00\ub828 \uc635\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.",source:"@site/docs/golang/agent-dbsql.mdx",sourceDirName:"golang",slug:"/golang/agent-dbsql",permalink:"/golang/agent-dbsql",draft:!1,editUrl:"undefined/docs/golang/agent-dbsql.mdx",tags:[{label:"Golang",permalink:"/tags/golang"},{label:"DB",permalink:"/tags/db"},{label:"SQL",permalink:"/tags/sql"}],version:"current",frontMatter:{id:"agent-dbsql",title:"DB, SQL \ucd94\uc801",description:"Golang \uc5d0\uc774\uc804\ud2b8\uc758 DB, SQL \uad00\ub828 \uc635\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.",tags:["Golang","DB","SQL"]},sidebar:"goSidebar",previous:{title:"\ud2b8\ub79c\uc7ad\uc158",permalink:"/golang/agent-transaction"},next:{title:"HTTP Call \ucd94\uc801",permalink:"/golang/agent-httpcall"}},c={},s=[{value:"whatap.conf \uc124\uc815",id:"whatapconf-\uc124\uc815",level:2},{value:"DB Connection",id:"db-connection",level:2},{value:"SQL",id:"sql",level:2},{value:"\ucffc\ub9ac \ucd94\uc801",id:"\ucffc\ub9ac-\ucd94\uc801",level:3},{value:"Prepared Statement \ucd94\uc801",id:"prepared-statement-\ucd94\uc801",level:3},{value:"API",id:"api",level:2}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Golang \uc5d0\uc774\uc804\ud2b8\uc758 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uad00\ub828 \uc815\ubcf4\ub97c \uc218\uc9d1\ud558\ub294 API\uc785\ub2c8\ub2e4."),(0,a.kt)("p",null,"DB Connection \uc815\ubcf4 \ubc0f Sql \uad6c\ubb38, \uc5d0\ub7ec, Prepared \uad6c\ubb38\uc744 \uc704\ud55c \ud30c\ub77c\ubbf8\ud130\ub97c API\ub85c \uc804\ub2ec\ud558\uba74 \uc2e4\ud589\uc2dc\uac04 \ubc0f \uc624\ub958\uc0ac\ud56d\uc744 \uc218\uc9d1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. SQL \uad6c\ubb38\uc740 \ucd5c\ub300 32 KB\uae4c\uc9c0 \uc218\uc9d1\ud569\ub2c8\ub2e4. SQL Prepared \uad6c\ubb38\uc744 \uc704\ud55c \ud30c\ub77c\ubbf8\ud130\ub294 \ucd5c\ub300 20\uac1c, \uac01\uac01 256 byte\uae4c\uc9c0 \uc218\uc9d1\ud569\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"whatapconf-\uc124\uc815"},"whatap.conf \uc124\uc815"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"go.sql_profile_enabled")," ",(0,a.kt)("span",{class:"type"},"Boolean"),(0,a.kt)("br",null),"\n\uae30\ubcf8\uac12 ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),(0,a.kt)("br",null),"database/sql \uc815\ubcf4 \uc218\uc9d1\uc5ec\ubd80\ub97c \uc124\uc815\ud569\ub2c8\ub2e4.")),(0,a.kt)("h2",{id:"db-connection"},"DB Connection"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:"title='GO'",title:"'GO'"},'import (\n    whatapsql "github.com/whatap/go-api/sql"\n)\n\nfunc main(){\n    trace.Init(nil)\n    //It must be executed before closing the app.\n    defer trace.Shutdown()\n\n    ctx, _ := trace.Start(context.Background(), "Trace Open DB")\n    defer trace.End(ctx, nil)\n\n    sqlCtx, _ := whatapsql.StartOpen(ctx, "id@tcp(x.x.x.x:3306)/test")\n    db, err := sql.Open("mysql", "id:pwd@tcp(x.x.x.x:3306)/test")\n    whatapsql.End(sqlCtx, err)\n    defer db.Close()\n}\n')),(0,a.kt)("h2",{id:"sql"},"SQL"),(0,a.kt)("h3",{id:"\ucffc\ub9ac-\ucd94\uc801"},"\ucffc\ub9ac \ucd94\uc801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:"title='GO'",title:"'GO'"},'import (\n    whatapsql "github.com/whatap/go-api/sql"\n)\n\nfunc main(){\n    trace.Init(nil)\n    //It must be executed before closing the app.\n    defer trace.Shutdown()\n\n    ctx, _ := trace.Start(context.Background(), "Trace Query")\n    defer trace.End(ctx, nil)\n\n    query = "select id, subject from tbl_faq limit 10"\n    sqlCtx, _ = whatapsql.Start(ctx, "id:pwd@tcp(x.x.x.x:3306)/test", query)\n    rows, err := db.QueryContext(ctx, query)\n    whatapsql.End(sqlCtx, err)\n}\n')),(0,a.kt)("h3",{id:"prepared-statement-\ucd94\uc801"},"Prepared Statement \ucd94\uc801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:"title='GO'",title:"'GO'"},'import (\n    whatapsql "github.com/whatap/go-api/sql"\n)\n\nfunc main(){\n    trace.Init(nil)\n    //It must be executed before closing the app.\n    defer trace.Shutdown()\n\n    ctx, _ := trace.Start(context.Background(), "Trace Prepared Statement")\n    defer trace.End(ctx, nil)\n\n    // Prepared Statement \uc0dd\uc131\n    query = "select id, subject from tbl_faq where id = ? limit ?"\n    stmt, err := db.Prepare(query)\n    if err != nil {\n        return\n    }\n    defer stmt.Close()\n\n    params := make([]interface{}, 0)\n    params = append(params, 8)\n    params = append(params, 1)\n\n    sqlCtx, _ := whatapsql.StartWithParamArray(ctx, "id:pwd(x.x.x.x:3306)/test", query, params)\n    rows, err := stmt.QueryContext(ctx, params...)\n    whatapsql.End(sqlCtx, err)\n\n    sqlCtx, _ = whatapsql.StartWithParam(ctx, "id:pwd(x.x.x.x:3306)/test", query, params...)\n    rows, err := stmt.QueryContext(ctx, params...)\n    whatapsql.End(sqlCtx, err)\n}\n')),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:"title='GO'",title:"'GO'"},"func Start(ctx context.Context, dbhost, sql string) (*SqlCtx, error)\n\nfunc StartOpen(ctx context.Context, dbhost string) (*SqlCtx, error)\n\nfunc End(sqlCtx *SqlCtx, err error) error\n\nfunc StartWithParam(ctx context.Context, dbhost, sql, param ...interface{}) (*SqlCtx, error)\n\nfunc StartWithParamArray(ctx context.Context, dbhost, sql string, param []interface{}) (*SqlCtx, error)\n\nfunc Trace(ctx context.Context, dbhost, sql, param string, elapsed int, err error) error\n")))}d.isMDXComponent=!0}}]);